              if ( ident_ct == 2 )
                 /* Two idents with some blocks in between.  This procedure is nested
                    inside one or more anonymous blocks, inside the main body of the
                    module.  The parent procedure is, in CM3, actually named
                    "<moduleName>_M3". */
                { prefix_len = prev_end - full_name + 4;
                  ensure_space ( &prefix_space, &prefix_space_len, prefix_len );
                  memcpy ( prefix_space, full_name, prefix_len - 4 );
                  prefix_space [ prefix_len - 4 ] = '_';
                  prefix_space [ prefix_len - 3 ] = 'M';
                  prefix_space [ prefix_len - 2 ] = '3';
                  prefix_space [ prefix_len - 1 ] = '\0';
                  parent_block_ss
                    = find_proc_in_blockvector ( block_vec, prefix_space );
                  if ( parent_block_ss >= 0 ) /* Found it. */
                    { /* Peculiarly, Cm3 flattens a block located inside the executable
                         body of a module into its <moduleName>_M3 procedure in the
                         actual block construction, yet still adds a block number 1
                         to the name of procedures located inside it.  We must consume
                         this ".1" to get the code below to find the right block. */
                      prev_end ++; /* The dot. */
                      while ( '0' <= *prev_end && *prev_end <= '9') { prev_end ++; }
                    }
                  else /* Try the PM3 spelling of the main body procedure, which is
                          "_INITM_<moduleName>". */
                    { prefix_len = prev_end - full_name + 8;
                      ensure_space ( &prefix_space, &prefix_space_len, prefix_len );
                      prefix_space [ 0 ] = '_';
                      prefix_space [ 1 ] = 'I';
                      prefix_space [ 2 ] = 'N';
                      prefix_space [ 3 ] = 'I';
                      prefix_space [ 4 ] = 'T';
                      prefix_space [ 5 ] = 'M';
                      prefix_space [ 6 ] = '_';
                      memcpy ( prefix_space + 7, full_name, prefix_len - 8 );
                      prefix_space [ prefix_len - 1 ] = '\0';
                      parent_block_ss
                        = find_proc_in_blockvector ( block_vec, prefix_space );
                      if ( parent_block_ss < 0 ) /* Didn't find that either. */
                        { printf_filtered
                            ( "Can't find module body procedure, either \"%s\", "
                              "or \"%s\"_M3 for nested procedure \"%s\"\n",
                              prefix_space, prefix_space + 7, full_name
                            );
                          goto done_with_nested;
                        }
                    }
